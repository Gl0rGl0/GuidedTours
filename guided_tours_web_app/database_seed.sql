-- Database Seed Data for Guided Tours Web App

-- Settings
INSERT INTO settings (setting_key, setting_value, description) VALUES
('territorial_scope', 'Comune di Trento e dintorni', 'Geographical area covered by the organization'),
('max_registration_size', '4', 'Max people per single user registration')
ON DUPLICATE KEY UPDATE setting_value = VALUES(setting_value);

-- Users
-- NOTE: Replace 'hashed_password_...' with actual password hashes generated by password_hash() in PHP.
-- Example: password_hash('password123', PASSWORD_DEFAULT)

-- Configurators (at least 2) - Password for all is 'password123'
INSERT IGNORE INTO users (username, password_hash, role, first_login) VALUES
('config_admin', '$2y$10$sEHuy0/aLcqN1p/06WBwK.vJ4wuRTRLHxDkob2a0Nw5j9uKMKdZCu', 'configurator', false),
('config_manager', '$2y$10$.qJYq8fA.G/pFty01O83muZs2.PebrJM4HtpW0zP81WUQ/zKBqYhG', 'configurator', false);

-- Volunteers (at least 2) - username matches nickname - Password for all is 'password123'
INSERT IGNORE INTO users (username, password_hash, role, first_login) VALUES
('volunteer_anna', '$2y$10$bhpGv6A6RsoAA4w10y8uDuIicETuYXmgn5A9zMPVZD7ql7kT590hO', 'volunteer', false),
('volunteer_marco', '$2y$10$qEJlR5XI2aW40OSkhkPBQuA.9b71LSkbq9e/QO/NMUdt3Nyyx9yN.', 'volunteer', false);

-- Fruitori (Users) (at least 3) - Password for all is 'password123'
INSERT IGNORE INTO users (username, password_hash, role, first_login) VALUES
('user_paolo', '$2y$10$hW7ZiTMv215RyGHtEB7FX.lDn4a3VdQZg/RIZIJSmQZUgjcjEhV0O', 'fruitore', false),
('user_elena', '$2y$10$NQjxs/L6huQM2ZUgYntLue9mzvQszQB5VzvJjcNJpSM016Rc7IWfC', 'fruitore', false),
('user_luca', '$2y$10$7m/cHq9lOLiLn2sPtTZNVe4ieDkcvKTQkiUXzc/7RwNKhTPyMHe3S', 'fruitore', false);

-- Get User IDs for later use (adjust if AUTO_INCREMENT starts differently)
SET @config1_id = (SELECT user_id FROM users WHERE username = 'config_admin');
SET @config2_id = (SELECT user_id FROM users WHERE username = 'config_manager');
SET @vol1_id = (SELECT user_id FROM users WHERE username = 'volunteer_anna');
SET @vol2_id = (SELECT user_id FROM users WHERE username = 'volunteer_marco');
SET @user1_id = (SELECT user_id FROM users WHERE username = 'user_paolo');
SET @user2_id = (SELECT user_id FROM users WHERE username = 'user_elena');
SET @user3_id = (SELECT user_id FROM users WHERE username = 'user_luca');


-- Places (at least 2)
INSERT IGNORE INTO places (name, description, location) VALUES
('Castello del Buonconsiglio', 'Il pi√π vasto e importante complesso monumentale della regione Trentino-Alto Adige.', 'Via Bernardo Clesio, 5, 38122 Trento TN'),
('Museo MUSE', 'Museo delle Scienze di Trento progettato da Renzo Piano.', 'Corso del Lavoro e della Scienza, 3, 38122 Trento TN');

-- Get Place IDs
SET @place1_id = (SELECT place_id FROM places WHERE name = 'Castello del Buonconsiglio');
SET @place2_id = (SELECT place_id FROM places WHERE name = 'Museo MUSE');


-- Visit Types (at least 3 total, across the places)
INSERT IGNORE INTO visit_types (place_id, title, description, meeting_point, period_start, period_end, start_time, duration_minutes, requires_ticket, min_participants, max_participants) VALUES
(@place1_id, 'Storia del Castello', 'Un viaggio attraverso le epoche del castello, dalle origini medievali al Concilio di Trento.', 'Ingresso principale del Castello', '2025-01-01', '2025-12-31', '10:00:00', 90, true, 5, 25),
(@place1_id, 'Giardini Segreti', 'Esplorazione dei giardini e delle logge rinascimentali.', 'Cortile interno, vicino alla fontana', '2025-04-01', '2025-10-31', '15:00:00', 60, true, 3, 15),
(@place2_id, 'Percorso Evolutivo MUSE', 'Dalle vette alpine ai segreti della foresta tropicale.', 'Biglietteria MUSE', '2025-01-01', '2025-12-31', '11:00:00', 120, true, 8, 30),
(@place1_id, 'Architettura del Castello', 'Analisi degli stili architettonici dal medievale al barocco.', 'Piazza principale del Castello', '2025-01-01', '2025-12-31', '14:00:00', 75, true, 4, 20),
(@place2_id, 'MUSE per Famiglie', 'Un tour interattivo pensato per bambini e genitori.', 'Area Accoglienza MUSE', '2025-01-01', '2025-12-31', '16:00:00', 90, true, 5, 25),
(@place1_id, 'Castello di Sera', 'Visita suggestiva al tramonto con focus sulle leggende locali.', 'Ponte levatoio', '2025-06-01', '2025-09-15', '19:00:00', 60, false, 6, 18),
(@place2_id, 'Mostra Temporanea Dinosauri', 'Approfondimento sulla mostra temporanea dedicata ai dinosauri.', 'Ingresso Mostra Temporanea, Piano -1', '2025-05-01', '2025-08-31', '15:30:00', 75, true, 5, 20);


-- Get Visit Type IDs (Use LIMIT 1 to ensure only one ID is selected if duplicates exist)
SET @vt1_id = (SELECT visit_type_id FROM visit_types WHERE title = 'Storia del Castello' LIMIT 1);
SET @vt2_id = (SELECT visit_type_id FROM visit_types WHERE title = 'Giardini Segreti' LIMIT 1);
SET @vt3_id = (SELECT visit_type_id FROM visit_types WHERE title = 'Percorso Evolutivo MUSE' LIMIT 1);


-- Volunteers <-> Visit Types Association
-- Anna can guide Castello history and MUSE evolution
INSERT IGNORE INTO volunteers_visit_types (user_id, visit_type_id) VALUES
(@vol1_id, @vt1_id),
(@vol1_id, @vt3_id);
-- Marco can guide Castello history and gardens
INSERT IGNORE INTO volunteers_visit_types (user_id, visit_type_id) VALUES
(@vol2_id, @vt1_id),
(@vol2_id, @vt2_id);


-- Visits (Sample instances - at least 5 proposed, 2 confirmed, 1 cancelled)
-- Dates need to be in the future relative to when the seed is run for 'proposed' etc. to make sense.
-- Assuming today is around April 1st, 2025.

-- Proposed (registration open)
INSERT IGNORE INTO visits (visit_type_id, visit_date, assigned_volunteer_id, status) VALUES
(@vt1_id, CURDATE() + INTERVAL 10 DAY, @vol1_id, 'proposed'), -- Castello History with Anna
(@vt2_id, CURDATE() + INTERVAL 12 DAY, @vol2_id, 'proposed'), -- Gardens with Marco
(@vt3_id, CURDATE() + INTERVAL 14 DAY, @vol1_id, 'proposed'), -- MUSE with Anna
(@vt1_id, CURDATE() + INTERVAL 17 DAY, @vol2_id, 'proposed'), -- Castello History with Marco
(@vt3_id, CURDATE() + INTERVAL 20 DAY, @vol1_id, 'proposed'); -- MUSE with Anna

-- Confirmed (registration closed, min participants met)
-- Assume registration closed 3 days prior, so visit date is >= CURDATE() + 3
INSERT IGNORE INTO visits (visit_type_id, visit_date, assigned_volunteer_id, status, status_updated_at) VALUES
(@vt1_id, CURDATE() + INTERVAL 4 DAY, @vol2_id, 'confirmed', NOW() - INTERVAL 1 DAY), -- Castello History with Marco
(@vt3_id, CURDATE() + INTERVAL 5 DAY, @vol1_id, 'confirmed', NOW() - INTERVAL 2 DAY); -- MUSE with Anna

-- Cancelled (registration closed, min participants NOT met)
INSERT IGNORE INTO visits (visit_type_id, visit_date, assigned_volunteer_id, status, status_updated_at) VALUES
(@vt2_id, CURDATE() + INTERVAL 6 DAY, @vol2_id, 'cancelled', NOW() - INTERVAL 3 DAY); -- Gardens with Marco

-- Get some Visit IDs for registrations (LIMIT 1 already present, should be okay)
SET @visit_prop1_id = (SELECT visit_id FROM visits WHERE visit_type_id = @vt1_id AND status = 'proposed' ORDER BY visit_date LIMIT 1);
SET @visit_conf1_id = (SELECT visit_id FROM visits WHERE visit_type_id = @vt1_id AND status = 'confirmed' ORDER BY visit_date LIMIT 1);
SET @visit_conf2_id = (SELECT visit_id FROM visits WHERE visit_type_id = @vt3_id AND status = 'confirmed' ORDER BY visit_date LIMIT 1);


-- Registrations (Sample bookings)
-- Paolo books 2 for a proposed visit
INSERT IGNORE INTO registrations (visit_id, user_id, num_participants, booking_code) VALUES
(@visit_prop1_id, @user1_id, 2, CONCAT('BK', LPAD(@visit_prop1_id, 4, '0'), 'U', LPAD(@user1_id, 3, '0')));

-- Elena books 3 for the first confirmed visit
INSERT IGNORE INTO registrations (visit_id, user_id, num_participants, booking_code) VALUES
(@visit_conf1_id, @user2_id, 3, CONCAT('BK', LPAD(@visit_conf1_id, 4, '0'), 'U', LPAD(@user2_id, 3, '0')));

-- Luca books 1 for the first confirmed visit
INSERT IGNORE INTO registrations (visit_id, user_id, num_participants, booking_code) VALUES
(@visit_conf1_id, @user3_id, 1, CONCAT('BK', LPAD(@visit_conf1_id, 4, '0'), 'U', LPAD(@user3_id, 3, '0')));

-- Elena books 4 for the second confirmed visit
INSERT IGNORE INTO registrations (visit_id, user_id, num_participants, booking_code) VALUES
(@visit_conf2_id, @user2_id, 4, CONCAT('BK', LPAD(@visit_conf2_id, 4, '0'), 'U', LPAD(@user2_id, 3, '0')));


-- Note: Volunteer Availability and Precluded Dates are typically managed dynamically via the application interface
-- based on the monthly cycle described in the requirements, so they are not seeded here statically.
